{"version":3,"sources":["avatar.jpg","tweets/components.js","tweets/TweetComponent.js","lookup/component.js","App.js","reportWebVitals.js","index.js"],"names":["ActionBtn","props","tweet","action","useState","likes","setLikes","userLike","setUserLike","actionDisplay","display","className","type","handleClick","event","preventDefault","onClick","Tweet","src","id","alt","style","color","timestamp","content","cursor","TweetComponent","textAreaRef","React","createRef","newTweets","setNewTweets","onSubmit","newTweetValue","current","value","tempNewTweets","unshift","method","encType","ref","name","maxLength","required","placeholder","cols","rows","TweetList","tweets","tweetsInit","setTweetsInit","setTweets","useEffect","final","concat","length","callback","xhr","XMLHttpRequest","responseType","open","onload","response","status","onerror","e","console","log","send","loadTweets","map","item","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a254184.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar.071a93e7.jpg\";","import React, { useState } from 'react';\r\nimport '../avatar.jpg';\r\n\r\nfunction ActionBtn(props){\r\n    const {tweet, action} = props\r\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\r\n    const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false)\r\n    const actionDisplay = action.display ? action.display : \"Action\"\r\n    const className = action.type === \"like\" ? `${actionDisplay}`: actionDisplay\r\n    const handleClick = (event) => {\r\n      event.preventDefault()\r\n      if (action.type === 'like'){\r\n\r\n        if (userLike === true){\r\n          setLikes(likes-1)\r\n          setUserLike(false)\r\n        }else{\r\n          setLikes(likes+1)\r\n          setUserLike(true)\r\n        }\r\n\r\n        \r\n      }\r\n    }\r\n    return action.type === \"like\" ? (\r\n      // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n      <a onClick={handleClick}>\r\n          <i className={className}></i><small>{likes}</small>\r\n      </a>\r\n    ) : (\r\n      // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n      <a onClick={handleClick}>\r\n          <i className={className}></i><small></small>\r\n      </a>\r\n    ) \r\n  }\r\n\r\n\r\nfunction Tweet(props) {\r\n    const {tweet} = props\r\n    return (\r\n      <div>\r\n        <div className=\"d-lg-flex align-items-center justify-content-between\">\r\n          <div className=\"d-flex align-items-center mb-4 mb-lg-0\">\r\n            <img src=\"/avatar.jpg\" id=\"img-uploaded\" className=\"avatar-lg rounded-circle\" alt=\"\" />\r\n            <div className=\"ml-3\">\r\n              <h4 className=\"mb-0\">Nickname <small style={{color:\"grey\"}}>@username {tweet.timestamp}</small></h4>\r\n              <p className=\"mb-0\" id='tweet-{tweet.id}'>\r\n                  {tweet.content}\r\n              </p>\r\n              <div className='btn-group d-flex' style={{cursor:\"pointer\"}}>\r\n                  <div>\r\n                    <ActionBtn tweet={tweet} action={{type: \"like\", display:\"fe fe-heart mr-1 text-primary\"}} />\r\n                  </div>\r\n                  <div className=\"ml-3\">\r\n                    <ActionBtn tweet={tweet} action={{type: \"retweet\", display:\"fe fe-refresh-ccw mr-1 text-primary\"}} />\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"dropdown-divider\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Tweet;","import React, { useEffect, useState } from 'react';\r\nimport Tweet from './components';\r\nimport { loadTweets } from '../lookup';\r\n\r\n\r\nexport function TweetComponent(props){\r\n  const textAreaRef = React.createRef()\r\n  const [newTweets, setNewTweets] = useState([])\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const newTweetValue = textAreaRef.current.value\r\n    let tempNewTweets = [...newTweets]\r\n    tempNewTweets.unshift({\r\n      content: newTweetValue,\r\n      likes: 0,\r\n      id:123,\r\n      timestamp: \"today\"\r\n    })\r\n    setNewTweets(tempNewTweets)\r\n    textAreaRef.current.value = \"\"\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"d-lg-flex align-items-center justify-content-between\">\r\n          <div className=\"d-flex align-items-center mb-4 mb-lg-0\">\r\n              <img src=\"%PUBLIC_URL%/assets/images/avatar/avatar.jpg\" id=\"img-uploaded\" className=\"avatar-xl rounded-circle\" alt=\"\" />\r\n              <div className=\"ml-3\">\r\n                  <div className=\"d-none alert alert-danger\" id=\"tweet-create-form-error\">\r\n\r\n                  </div>\r\n                  <form action=\"\" onSubmit={handleSubmit} method=\"POST\" id=\"tweet-create-form\" encType=\"multipart/form-data\">\r\n                    <textarea ref={textAreaRef} name=\"tweet\" maxLength=\"\" required placeholder=\"What's happening?\" className=\"form-control\" id=\"\" cols=\"150\" rows=\"3\"></textarea>\r\n                    <div className=\"mt-1\">\r\n                        <button type=\"submit\" className=\"btn btn-outline-primary btn-sm\">Tweet</button>\r\n                    </div>\r\n                  </form>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      <div className=\"dropdown-divider\"></div>\r\n      <TweetList tweets = {newTweets}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nfunction TweetList (props){\r\n  \r\n  const [tweetsInit, setTweetsInit] = useState([])\r\n  const [tweets, setTweets] = useState([])\r\n  \r\n  useEffect(() => {\r\n    let final = [...props.tweets].concat(tweetsInit)\r\n    if (final.length !== tweets.length){\r\n      setTweets(final)\r\n    }\r\n  }, [props.tweets, tweets, tweetsInit])\r\n\r\n  useEffect(() => {\r\n    // do my lookup\r\n    const myCallback = (response, status) => {\r\n      console.log(response, status)\r\n      if (status === 200){\r\n        setTweetsInit(response)\r\n      }\r\n    }\r\n    loadTweets(myCallback)\r\n  }, [])\r\n\r\n  return (\r\n    <div id=\"tweets\">\r\n        {tweets.map((item, index)=>{\r\n        return <Tweet tweet={item} key={`${index}-{item.id}`}/>\r\n        })}\r\n    \r\n     </div>\r\n  )\r\n}\r\n\r\nexport default TweetList;","export function loadTweets(callback){\r\n    const xhr = new XMLHttpRequest()\r\n    const method =\"GET\"\r\n    const url = \"http://127.0.0.1:8000/api/tweets/\"\r\n    const responseType = \"json\"\r\n  \r\n    xhr.responseType = responseType\r\n    xhr.open(method, url)\r\n    xhr.onload = function(){\r\n      callback(xhr.response, xhr.status)\r\n    }\r\n    xhr.onerror =  function (e) {\r\n      console.log(e)\r\n      callback({\"message\":\"The request was an error.\"}, 400)\r\n    }\r\n    xhr.send()\r\n  }","import React from 'react';\nimport { TweetComponent } from './tweets';\n\n\n\nfunction App() {\n  \n  return (\n    <div>\n      <div className=\"py-lg-6 py-4 bg-primary\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-xl-12 col-lg-12 col-md-12 col-12\">\n              <div>\n                <h1 className=\"text-white display-4 mb-0\">Welcome to TweetMe!</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"py-6\">\n        <div className=\"container\"> \n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <TweetComponent />\n                </div>\n            </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}